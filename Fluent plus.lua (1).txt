local Fluent = loadstring(game:HttpGet("https://raw.githubusercontent.com/discoart/FluentPlus/refs/heads/main/Beta.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

-- Windows Fluent Plus 
local Window = Fluent:CreateWindow({
    Title = "FluentPlus " .. Fluent.Version,
    SubTitle = "1.0.0 beta",
    TabWidth = 160,
    Size = UDim2.fromOffset(480, 360),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl,
    
    UserInfo = true,
    UserInfoTop = false,
    UserInfoTitle = game.Players.LocalPlayer.DisplayName,
    UserInfoSubtitle = "Premium User",
    UserInfoSubtitleColor = Color3.fromRGB(71, 123, 255)
})

-- minimiser 
local Minimizer = Fluent:CreateMinimizer({
    Icon = "rbxassetid://17243177911", -- Your minimizer icon
    Size = UDim2.fromOffset(44, 44),
    Position = UDim2.new(0, 320, 0, 24),
    Acrylic = true,
    Corner = 22,
    Transparency = 1,
    Draggable = true,
    Visible = true
})

-- Variables for speed control
local SpeedEnabled = false
local CurrentSpeed = 16
local SpeedConnection = nil

-- Tabs 
local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "rbxassetid://10747373176" }), -- lucide-user for Main
    Settings = Window:AddTab({ Title = "Settings", Icon = "rbxassetid://10709810948" }) -- Old settings icon
}

local Options = Fluent.Options

do
    local Section = Tabs.Main:AddSection("Movement")

    -- Speed toggle switch
    local SpeedToggle = Tabs.Main:AddToggle("SpeedToggle", {
        Title = "Speed Hack",
        Description = "Enable/disable speed hack",
        Default = false
    })

    SpeedToggle:OnChanged(function()
        SpeedEnabled = Options.SpeedToggle.Value
        
        if SpeedConnection then
            SpeedConnection:Disconnect()
            SpeedConnection = nil
        end
        
        if SpeedEnabled then
            local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.WalkSpeed = CurrentSpeed
            end
            
            -- Continuously apply speed while enabled
            SpeedConnection = game:GetService("RunService").Heartbeat:Connect(function()
                if SpeedEnabled then
                    local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
                    if humanoid then
                        humanoid.WalkSpeed = CurrentSpeed
                    end
                end
            end)
            
            Fluent:Notify({
                Title = "Speed Hack",
                Content = "Enabled with speed: " .. CurrentSpeed,
                Duration = 3
            })
        else
            local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.WalkSpeed = 16 -- Default speed
            end
            
            Fluent:Notify({
                Title = "Speed Hack",
                Content = "Disabled",
                Duration = 3
            })
        end
    end)

    -- Speed slider (only takes effect when toggle is off)
    local SpeedSlider = Tabs.Main:AddSlider("SpeedSlider", {
        Title = "Speed Value",
        Description = "Set speed value (applies when toggle is off)",
        Default = 16,
        Min = 16,
        Max = 100,
        Rounding = 1,
        Callback = function(Value)
            CurrentSpeed = Value
            if not SpeedEnabled then
                local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
                if humanoid then
                    humanoid.WalkSpeed = CurrentSpeed
                end
            end
        end
    })

    SpeedSlider:OnChanged(function(Value)
        CurrentSpeed = Value
        if not SpeedEnabled then
            local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.WalkSpeed = CurrentSpeed
            end
        end
    end)

    -- Character added/removed handling
    game.Players.LocalPlayer.CharacterAdded:Connect(function(character)
        if SpeedEnabled then
            character:WaitForChild("Humanoid")
            character.Humanoid.WalkSpeed = CurrentSpeed
        end
    end)

    -- Reset speed when script ends
    game:GetService("Players").LocalPlayer.CharacterRemoving:Connect(function()
        if SpeedConnection then
            SpeedConnection:Disconnect()
            SpeedConnection = nil
        end
    end)

    -- Jump Power toggle
    local JumpToggle = Tabs.Main:AddToggle("JumpToggle", {
        Title = "Super Jump",
        Description = "Enable/disable super jump",
        Default = false
    })

    JumpToggle:OnChanged(function()
        local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            if Options.JumpToggle.Value then
                humanoid.JumpPower = 100
                Fluent:Notify({
                    Title = "Super Jump",
                    Content = "Enabled",
                    Duration = 3
                })
            else
                humanoid.JumpPower = 50
                Fluent:Notify({
                    Title = "Super Jump",
                    Content = "Disabled",
                    Duration = 3
                })
            end
        end
    end)

    -- Simple button example
    Tabs.Main:AddButton({
        Title = "Reset Character",
        Description = "Respawns your character",
        Callback = function()
            game.Players.LocalPlayer.Character:BreakJoints()
            Fluent:Notify({
                Title = "Character",
                Content = "Resetting character...",
                Duration = 3
            })
        end
    })
end

-- Addons:
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})

InterfaceManager:SetFolder("FluentPlusScriptHub")
SaveManager:SetFolder("FluentPlusScriptHub/config")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

Window:SelectTab(1)

-- Final notification
Fluent:Notify({
    Title = "FluentPlus",
    Content = "UI loaded with all custom icons!",
    Duration = 5
})

-- Load any autoload config
SaveManager:LoadAutoloadConfig()

print("FluentPlus UI loaded successfully with all custom icons!")